model ModerationUser {
    id           String                     @id
    lastKnownTag String
    notes        Note[]
    log          ModerationLogItem[]
    pendingLog   ModerationPendingLogItem[]
}

model Note {
    id      String @id @default(cuid())
    title   String
    note    String
    guildId String

    user   ModerationUser @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String
}

enum ModerationType {
    WARN
    MUTE
    KICK
    BAN
}

model ModerationLogItem {
    id        BigInt         @id @default(autoincrement())
    type      ModerationType
    moderator String
    reason    String
    date      DateTime       @default(now())
    duration  BigInt?
    strikes   Int?
    guildId   String

    user   ModerationUser @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String
}

model ModerationPendingLogItem {
    id        String         @id @default(cuid())
    type      ModerationType
    moderator String
    reason    String
    duration  BigInt?
    silent    Boolean?
    stikes    Int?
    guildId   String

    user   ModerationUser @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String
}
